<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<?rfc toc="yes" ?>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="2"?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc strict="no" ?>

<rfc 
	ipr="trust200902"
	category="info"
	docName="draft-gont-v6ops-ipv6-ehs-packet-drops-01">
  <front>
    <title abbrev="IPv6 Extension Headers">Operational Implications of IPv6 Packets with Extension Headers</title>

    <author fullname="Fernando Gont" initials="F." surname="Gont">
      <organization abbrev="SI6 Networks / UTN-FRH">SI6 Networks / UTN-FRH</organization>

      <address>
        <postal>
          <street>Evaristo Carriego 2644</street>
          <code>1706</code>
          <city>Haedo</city>
          <region>Provincia de Buenos Aires</region>
          <country>Argentina</country>
        </postal>

        <phone>+54 11 4650 8472</phone>
        <email>fgont@si6networks.com</email>
        <uri>http://www.si6networks.com</uri>
      </address>
    </author>

    <author initials="N" surname="Hilliard" fullname="Nick Hilliard">
      <organization>INEX</organization>
      <address>
        <postal>
          <street>4027 Kingswood Road</street>
          <city>Dublin</city>
          <code>24</code>
          <country>IE</country>
        </postal>
        <email>nick@inex.ie</email>
      </address>
    </author>

    <author initials="G" surname="Doering" fullname="Gert Doering">
      <organization>SpaceNet AG</organization>
      <address>
        <postal>
          <street>Joseph-Dollinger-Bogen 14</street>
          <city>Muenchen</city>
          <code>D-80807</code>
          <country>Germany</country>
        </postal>
        <email>gert@space.net</email>
      </address>
    </author>

    <author fullname="Will (Shucheng) Liu" initials="W." surname="Liu">
      <organization>Huawei Technologies</organization>
      <address>
        <postal>
          <street>Bantian, Longgang District</street>
          <city>Shenzhen</city>
          <code>518129</code>
          <country>P.R. China</country>
        </postal>
        <email>liushucheng@huawei.com</email>
      </address>
    </author>

    <author fullname="Warren Kumari" initials="W." surname="Kumari">
      <organization>Google</organization>

      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>

          <city>Mountain View, CA</city>

          <code>94043</code>

          <country>US</country>
        </postal>

        <email>warren@kumari.net</email>
      </address>
    </author>


    <date year="2015" />

    <area>Operations and Management</area>
    <workgroup>IPv6 Operations Working Group (v6ops)</workgroup>

    <abstract>
    <t>
This document summarizes the security and operational implications of IPv6 extension headers, and attempts to analyze reasons why packets with IPv6 extension headers may be dropped in the public Internet.
</t>
    </abstract>
  </front>

  <middle>

<section title="Introduction" anchor="intro"> 
<t>
IPv6 Extension Headers (EHs) allow for the extension of the IPv6 protocol, and provide support for core functionality such as IPv6 fragmentation. However, common implementation limitations suggest that EHs present a challenge for IPv6 packet routing equipment, and evidence exists to suggest that IPv6 packets with EHs may be intentionally dropped on the public Internet in some network deployments.
</t>

<t>Discussions about the security and operational implications of IPv6 extension headers are a regular feature in IETF working groups and other places.  Often in these discussions, important security and operational issues are overlooked.</t>

<t>
This document tries to raise awareness about the security and operational implications of IPv6 Extension Headers, and presents  reasons why some networks drop packets containing IPv6 Extension Headers.
</t>

<t>
<xref target="previous-work"/> of this document summarizes the work that has been done in the area of IPv6 extension headers. <xref target="security-implications"/> discusses the security implications of IPv6 Extension Headers, while <xref target="operational-implications"/> discusses their operational implications.
</t>
</section>

<section title="Previous Work on IPv6 Extension Headers" anchor="previous-work">
<t>Some of the implications of IPv6 Extension Headers have been discussed in IETF circles. For example, <xref target="I-D.taylor-v6ops-fragdrop"/> discusses a rationale for which operators drop IPv6 fragments. <xref target="I-D.wkumari-long-headers"/> discusses possible issues arising from "long" IPv6 header chains. <xref target="RFC7045"/> clarifies how intermediate nodes should deal with IPv6 extension headers. <xref target="RFC7112"/> discusses the issues arising in a specific case where the IPv6 header chain is fragmented into two or more fragments (and formally forbids such case). <xref target="I-D.kampanakis-6man-ipv6-eh-parsing"/> describes how inconsistencies in the way IPv6 packets with extension headers are parsed by different implementations may result in evasion of security controls, and presents guidelines for parsing IPv6 extension headers with the goal of providing a common and consistent parsing methodology for IPv6 implementations. <xref target="RFC6980"/> analyzes the security implications of employing IPv6 fragmentation with Neighbor Discovery for IPv6, and formally recommends against such usage. Finally, <xref target="RFC7123"/> discusses how some popular RA-Guard implementations are subject to evasion by means of IPv6 extension headers.</t>

<t>Some preliminary measurements regarding the extent to which packet containing IPv6 EHs are dropped in the public Internet have been presented in <xref target="PMTUD-Blackholes"/>, <xref target="Gont-IEPG88"/>, <xref target="Gont-Chown-IEPG89"/>, and <xref target="Linkova-Gont-IEPG90"/>. <xref target="I-D.ietf-v6ops-ipv6-ehs-in-real-world"/> presents more comprehensive results and documents the methodology for obtaining the presented results.</t>
</section>


<!--
<section title="Performance Implications" anchor="performance-implications">
<t>FIXME:  Some IPv6 router implementations suffer from a negative performance impact when IPv6 Extension Headers are employed.</t>

<t>In the most trivial case, a packet that includes a Hop-by-Hop Options header will typically go through the slow forwarding path, and be processed by the router's CPU. Another case is that in which a router that has been configured to enforce an ACL based on upper-layer information (e.g., upper layer protocol or TCP Destination Port). In such case, the router will need to process the entire IPv6 header chain in order to find the required information, and this may cause the packet to be processed in the slow path <xref target="Cisco-EH-Cons"/>.</t>

<t>Processing a large amounts of traffic in the slow path may cause the router to be unable to handle the same traffic loads when compared to normal packets, and may result in Denial of Service (DoS) scenarios.</t>

<t>We note that, for obvious reasons, the aforementioned performance issues may also affect other devices such as firewalls, Network Intrusion Detection Systems (NIDS), etc. <xref target="Zack-FW-Benchmark"/>.</t>
</section>
-->

<section title="Security Implications" anchor="security-implications">
<t>The security implications of IPv6 Extension Headers generally fall into one or more of these categories:
<list style="symbols">
<t>Evasion of security controls</t>
<t>DoS due to processing requirements</t>
<t>DoS due to implementation errors</t>
<t>Extension Header-specific issues</t>
</list>
</t>
<!-- IPv4 packets that contain limited space for IPv4 options and an "Internet Header Length" (IHL) field where the upper-layer protocols c -->

<t>Unlike IPv4 packets where the upper-layer protocols can be trivially found by means of the "IHL" ("Internet Header Length") IPv4 header field, the structure of IPv6 packets is more flexible and complex. Locating upper-layer protocol information requires that all IPv6 extension headers be examined. This has presented implementation difficulties, and packet filtering mechanisms on several security devices can be trivially evaded by inserting IPv6 Extension Headers between the main IPv6 header and the upper layer protocol. <xref target="RFC7113"/> describes this issue for the RA-Guard case, but the same techniques can be employed to circumvent other IPv6 firewall and packet filtering mechanisms.  Additionally, implementation inconsistencies in packet forwarding engines may result in evasion of security controls <xref target="I-D.kampanakis-6man-ipv6-eh-parsing"/> <xref target="Atlasis2014"/> <xref target="BH-EU-2014"/>.
</t>


<!-- [fgont]  The following paragraph was tagged with "FIXME:". Not sure if there's still stuff to fix here... But I leave this note as a reminder to all of us :-) 
-->
<t>As noted in <xref target="operational-implications"/>, packets that use IPv6 Extension Headers may have a negative performance impact on the handling devices. Unless appropriate mitigations are put in place (e.g., packet dropping and/or rate-limiting), an attacker could simply send a large amount of IPv6 traffic employing IPv6 Extension Headers with the purpose of performing a Denial of Service (DoS) attack.
<list style="hanging">
<t>NOTE: In the most trivial case, a packet that includes a Hop-by-Hop Options header will typically go through the slow forwarding path, and be processed by the router's CPU. An implementation-dependent case might be that in which a router that has been configured to enforce an ACL based on upper-layer information (e.g., upper layer protocol or TCP Destination Port), needs to process the entire IPv6 header chain (in order to find the required information) and this causes the packet to be processed in the slow path <xref target="Cisco-EH-Cons"/>. We note that, for obvious reasons, the aforementioned performance issues may also affect other devices such as firewalls, Network Intrusion Detection Systems (NIDS), etc. <xref target="Zack-FW-Benchmark"/>. The extent to which these devices are affected will typically be implementation-dependent.
</t>
</list>
</t>

<t>IPv6 implementations, like all other software, tend to mature with time and wide-scale deployment. While the IPv6 protocol itself has existed for almost 20 years, serious bugs related to IPv6 Extension Header processing continue to be discovered<!-- (see e.g. <xref target="Cisco-Frag1"/> and <xref target="Cisco-Frag2"/>)-->.  Because there is currently little operational reliance on IPv6 Extension headers, the corresponding code paths are rarely exercised, and there is the potential that bugs still remain to be discovered in some implementations.</t>

<t>IPv6 Fragment Headers are employed to allow fragmentation of IPv6 packets. While many of the security implications of the fragmentation / reassembly mechanism are known from the IPv4 world, several related issues have crept into IPv6 implementations. These range from denial of service attacks to information leakage, for example <xref target="I-D.ietf-6man-predictable-fragment-id"/>, <xref target="Bonica-NANOG58"/> and <xref target="Atlasis2012"/>).
</t>
</section>

<section title="Operational Implications" anchor="operational-implications">

<!-- 
[fgont] Isn't this already discussed in the "ddos-management" section?

<t>FIXME: Implementation of edge-to-core customer sanitisation filters</t>

-->

<section title="Requirement to process required layer-3/layer-4 information" anchor="inability">

<t>Intermediate systems and middleboxes often need to process the entire IPv6 extension header chain to find the layer-4 header.  When such devices are unable to obtain the required information, they may simply drop the corresponding packets. The following subsections discuss some of reasons for which such layer-4 information may be needed by an intermediate systems or middlebox, and why packets containing IPv6 extension headers may represent a challenge in such scenarios.</t>

<section title="Enforcing infrastructure ACLs" anchor="enforcing-infrastructure-acls">

<t>Generally speaking, infrastructure ACLs drop unwanted packets destined 
to parts of a provider's infrastructure, because they are not operationally
needed and can be used for attacks of different sorts against the router's 
control plane.  Some traffic needs to be differentiated depending on layer-3
or layer-4 criteria to achieve a useful balance of protection and functionality, for example:
<list style="symbols">
 <t>Permit some amount of ICMP echo (ping) traffic towards the router's 
 addresses for troubleshooting.</t>
 <t>Permit BGP sessions on the shared network of an exchange point (potentially differentiating between the amount of packets/seconds permitted for established sessions and connection establishment), but do not permit other traffic from the same peer IP addresses.</t>
</list>
</t>
</section>

<section title="DDoS Management and Customer Requests for Filtering" anchor="ddos-management">
<t>The case of customer DDoS protection and edge-to-core customer protection
filters is similar in nature to the infrastructure ACL protection.  Similar
to iACL protection, layer-4 ACLs generally need to be applied as close to the
edge of the network as possible, even though the intent is to protect the
customer edge rather than the provider core.  Application of layer-4 DDoS protection
to a network edge is often automated using Flowspec <xref target="RFC5575"/>.
</t>

<t>For example, a web site which normally only handled traffic on TCP ports
80 and 443 could be subject to a volumetric DDoS attack using NTP and DNS
packets with randomised source IP address, thereby rendering useless
traditional <xref target="RFC5635"/> source-based real-time black hole
mechanisms.  In this situation, DDoS protection ACLs could be configured to
block all UDP traffic at the network edge without impairing the web server
functionality in any way.  Thus, being able to block arbitrary
protocols at the network edge can avoid DDoS-related problems both in the provider
network and on the customer edge link.
</t>
</section>

<section title="ECMP and Hash-based Load-Sharing" anchor="ecmp-load-balancing">

<t>In the case of ECMP (equal cost multi path) load sharing, the router on
the sending side of the link needs to make a decision regarding which of the links to
use for a given packet.  Since round-robin usage of the links is usually
avoided in order to prevent packet reordering, forwarding engines need to
use a mechanism which will consistently forward the same data streams down
the same forwarding paths.  Most forwarding engines achieve this by
calculating a simple hash using an n-tuple gleaned from a combination of
layer-2 through to layer-4 packet header information.  This n-tuple will
typically use the src/dst MAC address, src/dst IP address, and if possible
further layer-4 src/dst port information.  As layer-4 port information
increases the entropy of the hash, it is highly desirable to use it where
possible.
</t>

</section>

<section title="Packet Forwarding Engine Constraints" anchor="pfe-constraints">

<t>

Most modern routers use dedicated hardware (e.g.  ASICs or NPUs) to
determine how to forward packets across their internal fabrics.  One of the
common methods of handling next-hop lookup is to send a small portion of the
ingress packet to a lookup engine with specialised hardware (e.g.  Tertiary
CAM or RLDRAM) to determine the packet's next-hop.  Technical constraints
mean that there is a trade-off between the amount of data sent to the lookup
engine and the overall performance of the lookup engine.  If more data is
sent, the lookup engine can inspect further into the packet, but the overall
performance of the system will be reduced.  If less data is sent, the
overall performance of the router will be increased but the packet lookup
engine may not be able to inspect far enough into a packet to determine how
it should be handled.
</t>
<t>
<list style="hanging">
<!-- [fgont] This note was flagged as "FIX ME" -->
<t>Note: For example, current high-end
routers at the time of authorship of this document can use up to 192 bytes
of header (Cisco ASR9000 Typhoon) or 384 bytes of header (Juniper MX Trio)
</t>
</list>
</t>

<t> If a hardware forwarding engine on a modern router cannot make a
forwarding decision about a packet because critical information is not sent
to the look-up engine, then the router will normally drop the packet. 
Historically, some packet forwarding engines punted packets of this form to
the control plane for more in-depth analysis, but this is unfeasible on most
current router architectures as a result of the vast difference between the hardware
forwarding capacity of the router and the size of the management link which
connects the control plane to the forwarding plane.  </t>

<t>

If an IPv6 header chain is sufficiently long that its header exceeds the
packet look-up capacity of the router, then it may be dropped due to hardware
inability to determine how it should be handled.

</t>

</section>

</section>



<section title="Route-Processor Protection" anchor="route-processor-protection">
<t>Most modern routers have a fast hardware-assisted forwarding plane
and a loosely coupled control plane, connected together with a link that
has much less capacity than the forwarding plane could handle.  Traffic
differentiation cannot be done by the control plane side, because this would
overload the internal link connecting the forwarding plane to the control
plane.
</t>

<t>The Hop-by-Hop Options header is particularly challenging since, in most (if not all) implementations, it causes the corresponding packet to be punted to a software path. As a result, operators usually drop IPv6 packets containing this extension header.</t>
</section>


<section title="Inability to Perform Fine-grained Filtering" anchor="finer-grained">
<t>Some routers lack of fine-grained filtering of IPv6 extension headers. For example, an operator may want to drop packets containing Routing Header Type 0 (RHT0) but may only be able to filter on the extension header type (Routing Header). As a result, the operator may end up enforcing a more coarse filtering policy (e.g. "drop all packets containing a Routing Header" vs. "only drop packets that contain a Routing Header Type 0").
</t>
</section>


</section>

<section title="A Possible Attack Vector" anchor="possible-attack-vector">
<t>
The widespread drop of IPv6 packets employing IPv6 Extension Headers can, in some scenarios, be exploited for malicious purposes: if packets employing IPv6 EHs are known to be dropped on the path from system A to system B, an attacker could cause packets sent from A to B to be dropped by sending a forged ICMPv6 Packet Too Big (PTB) <xref target="RFC4443"/> error message to A (advertising an MTU smaller than 1280), such that subsequent packets from A to B include a fragment header (i.e., they result in atomic fragments <xref target="RFC6946"/>). 
</t>

<t>Possible scenarios where this attack vector could be exploited include (but are not limited to):
<list style="symbols">
<t>Communication between any two systems through to public network (e.g., client from/to server or server from/to server), where packets with IPv6 extension headers are dropped by some intermediate router</t>
<t>Communication between two BGP peers employing IPv6 transport, where these BGP peers implement ACLs to drop IPv6 fragments (to avoid control-plane attacks)
</t>
</list>
</t>

<t>The aforementioned attack vector is exacerbated by the following factors:
<list style="symbols">
<t>The attacker does not need to forge the IPv6 Source Address of his attack packets. Hence, deployment of simple BCP38 filters will not help as a counter-measure.</t>

<t>Only the IPv6 addresses of the IPv6 packet embedded in the ICMPv6 payload need to be forged. While one could envision filtering devices enforcing BCP38-style filters on the ICMPv6 payload, the use of extension headers (by the attacker) could make this difficult, if not impossible.</t>

<t>Many implementations fail to perform validation checks on the received ICMPv6 error messages, as recommended in Section 5.2 of <xref target="RFC4443"/> and documented in <xref target="RFC5927"/>. It should be noted that in some cases, such as when an ICMPv6 error message has (supposedly) been elicited by a connection-less transport protocol (or some other connection-less protocol being encapsulated in IPv6), it may be virtually impossible to perform validation checks on the received ICMPv6 error messages. And, because of IPv6 extension headers, the ICMPv6 payload might not even contain any useful information on which to perform validation checks.</t>

<t>Upon receipt of one of the aforementioned ICMPv6 "Packet Too Big" error messages, the Destination Cache <xref target="RFC4861"/> is usually updated to reflect that any subsequent packets to such destination should include a Fragment Header. This means that a single ICMPv6 "Packet Too Big" error message might affect multiple communication instances (e.g. TCP connections) with such destination.
</t>

<t>
A router or other middlebox cannot simply drop all incoming ICMPv6 Packet Too Big error messages, as this would create a PMTUD blackhole.
</t>
</list>
</t>



<t>Possible mitigations for this issue include:
<list style="symbols">
<t>Dropping incoming ICMPv6 Packet Too Big error messages that advertise a Next-Hop MTU smaller than 1280 bytes.</t>
<t>Artificially reducing the MTU to 1280 bytes and dropping incoming ICMPv6 PTB error messages.</t>
</list>
</t>

<t>Both of these mitigations come at the expense of possibly preventing communication through SIIT <xref target="RFC6145"/> that relies on IPv6 atomic fragments (see <xref target="I-D.ietf-6man-deprecate-atomfrag-generation"/>), and also implies that the filtering device has the ability to filter ICMP PTB messages based on the contents of the MTU field.
<!--
Filtering only those ICMPv6 PTB messages that advertise a Next-Hop MTU smaller than 1280 would prevent the generation of IPv6 atomic fragments without breaking Path-MTU Discovery. However, such filtering would require deep packet inspection, and such functionality (if at all desirable) might not be available.-->
</t>
<t><xref target="I-D.ietf-6man-deprecate-atomfrag-generation"/> has recently proposed to deprecate the generation of IPv6 atomic fragments, and update SIIT <xref target="RFC6145"/> such that it does not rely on ICMPv6 atomic fragments. Thus, any of the above mitigations would eliminate the attack vector without any interoperability implications.
</t>
</section>

<section title="IANA Considerations" anchor="iana-cons">
<t>There are no IANA registries within this document.  The RFC-Editor can remove this section before publication of this document as an RFC.
</t>
</section>

    <section title="Security Considerations">

<t>The security implications of IPv6 extension headers are discussed in <xref target="security-implications"/>. A specific attack vector that could leverage the widespread dropping of packets with IPv6 EHs (along with possible countermeasures) is discussed in <xref target="possible-attack-vector"/>. This document does not introduce any new security issues.
</t>
    </section>

    <section title="Acknowledgements">
<t>The authors would like to thank (in alphabetical order) Mikael Abrahamsson, and Eric Vyncke, for providing valuable comments on earlier versions of this document. Additionally, the authors would like to thank participants of the v6ops working group for their valuable input on the topics that led to the publication of this document.</t>
<t>Fernando Gont would like to thank Fernando Gont would like to thank Jan Zorz / Go6 Lab &lt;http://go6lab.si/&gt;, and Jared Mauch / NTT America, for providing access to systems and networks that were employed to perform experiments and measurements involving packets with IPv6 Extension Headers. Additionally, he would like to thank SixXS &lt;https://www.sixxs.net&gt; for providing IPv6 connectivity.</t>
    </section>


  </middle>

  <back>


  <references title='Normative References'>
	<?rfc include="reference.RFC.2460" ?>
	<?rfc include="reference.RFC.4443" ?>
	<?rfc include="reference.RFC.4861" ?>
	<?rfc include="reference.RFC.6145" ?>
	<?rfc include="reference.RFC.6946" ?>
  </references>

  <references title='Informative References'>
	<?rfc include="reference.RFC.5575" ?>
	<?rfc include="reference.RFC.5635" ?>
	<?rfc include="reference.RFC.5927" ?>
	<?rfc include="reference.RFC.6980" ?>
	<?rfc include="reference.RFC.7045" ?>
	<?rfc include="reference.RFC.7112" ?>
	<?rfc include="reference.RFC.7113" ?>
	<?rfc include="reference.RFC.7123" ?>
	<?rfc include="reference.I-D.taylor-v6ops-fragdrop" ?>
	<?rfc include="reference.I-D.wkumari-long-headers" ?>
	<?rfc include="reference.I-D.kampanakis-6man-ipv6-eh-parsing" ?>

	<?rfc include="reference.I-D.ietf-6man-predictable-fragment-id" ?>
	<?rfc include="reference.I-D.ietf-6man-deprecate-atomfrag-generation" ?>
	<?rfc include="reference.I-D.ietf-v6ops-ipv6-ehs-in-real-world" ?>

    <reference anchor="RIPE-Atlas" target="https://atlas.ripe.net/">
  <front>
  <title>RIPE Atlas</title>
  <author initials="" surname="RIPE" fullname="RIPE">
				<organization></organization>
  </author>
  <date year=""/>
  </front>
  </reference>

    <reference anchor="Atlasis2014" target="http://www.insinuator.net/2014/05/a-novel-way-of-abusing-ipv6-extension-headers-to-evade-ipv6-security-devices/">
  <front>
  <title>A Novel Way of Abusing IPv6 Extension Headers to Evade IPv6 Security Devices</title>
  <author initials="A.A." surname="Atlasis" fullname="Antonios Atlasis">
				<organization></organization>
  </author>
  <date month="May" year="2014"/>
  </front>

  </reference>


    <reference anchor="BH-EU-2014" target="https://www.ernw.de/download/eu-14-Atlasis-Rey-Schaefer-briefings-Evasion-of-HighEnd-IPS-Devices-wp.pdf">
  <front>
  <title>Evasion of High-End IDPS Devices at the IPv6 Era</title>
  <author initials="A.a." surname="Atlasis" fullname="Antonios Atlasis">
				<organization></organization>
  </author>
  <author initials="E.R." surname="Rey" fullname="Enno Rey">
				<organization></organization>
  </author>
  <author initials="R.S." surname="Schaefer" fullname="Rafael Schaefer">
				<organization></organization>
  </author>


  <date year="2014"/>
  </front>
		<seriesInfo name="" value="BlackHat Europe 2014"/>
  </reference>



    <reference anchor="Atlasis2012" target="https://media.blackhat.com/bh-eu-12/Atlasis/bh-eu-12-Atlasis-Attacking_IPv6-Slides.pdf">
  <front>
  <title>Attacking IPv6 Implementation Using Fragmentation</title>
  <author initials="A.A." surname="Atlasis" fullname="Antonios Atlasis">
				<organization></organization>
  </author>
  <date year=""/>
  </front>
		<seriesInfo name="" value="BlackHat Europe 2012. Amsterdam, Netherlands. March 14-16, 2012"/>
  </reference>


    <reference anchor="Gont-IEPG88" target="http://www.iepg.org/2013-11-ietf88/fgont-iepg-ietf88-ipv6-frag-and-eh.pdf">
  <front>
  <title>Fragmentation and Extension header Support in the IPv6 Internet</title>
  <author initials="F." surname="Gont" fullname="Fernando Gont">
				<organization></organization>
  </author>
  <date year=""/>
  </front>
		<seriesInfo name="" value="IEPG 88. Vancouver, BC, Canada. November 13, 2013"/>
  </reference>

    <reference anchor="Gont-Chown-IEPG89" target="http://www.iepg.org/2014-03-02-ietf89/fgont-iepg-ietf89-eh-update.pdf">
  <front>
  <title>A Small Update on the Use of IPv6 Extension Headers</title>
  <author initials="F." surname="Gont" fullname="Fernando Gont">
				<organization></organization>
  </author>
  <author initials="T." surname="Chown" fullname="Tim Chown">
				<organization></organization>
  </author>
  <date year="IEPG 89. London, UK. March 2, 2014"/>
  </front>

  </reference>


    <reference anchor="Linkova-Gont-IEPG90" target="http://www.iepg.org/2014-07-20-ietf90/iepg-ietf90-ipv6-ehs-in-the-real-world-v2.0.pdf">
  <front>
  <title>IPv6 Extension Headers in the Real World v2.0</title>
  <author initials="J." surname="Linkova" fullname="Jen Linkova">
				<organization></organization>
  </author>
  <author initials="F." surname="Gont" fullname="Fernando Gont">
				<organization></organization>
  </author>

  <date year=""/>
  </front>
		<seriesInfo name="" value="IEPG 90. Toronto, ON, Canada. July 20, 2014"/>
  </reference>


    <reference anchor="Bonica-NANOG58" target="https://www.nanog.org/sites/default/files/mon.general.fragmentation.bonica.pdf">
  <front>
  <title>IPv6 Extension Headers in the Real World v2.0</title>
  <author initials="R." surname="Bonica" fullname="Ron Bonica">
				<organization></organization>
  </author>


  <date year=""/>
  </front>
		<seriesInfo name="" value="NANOG 58. New Orleans, Louisiana, USA. June 3-5, 2013"/>
  </reference>




<!--
    <reference anchor="Cisco-Frag1" target="http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20130925-ipv6vfr">
  <front>
  <title>Cisco IOS Software IPv6 Virtual Fragmentation Reassembly Denial of Service Vulnerability</title>
  <author initials="" surname="Cisco" fullname="Cisco">
				<organization></organization>
  </author>
  <date month="September" year="2013"/>
  </front>

  </reference>
-->

<!--
    <reference anchor="Cisco-Frag2" target="http://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20150611-iosxr">
  <front>
  <title>sco IOS XR Software Crafted IPv6 Packet Denial of Service Vulnerability</title>
  <author initials="" surname="Cisco" fullname="Cisco">
				<organization></organization>
  </author>
  <date month="June" year="2015"/>
  </front>

  </reference>
-->

    <reference anchor="Cisco-EH-Cons" target="http://www.cisco.com/en/US/technologies/tk648/tk872/technologies_white_paper0900aecd8054d37d.pdf">
  <front>
  <title>IPv6 Extension Headers Review and Considerations</title>
  <author initials="" surname="Cisco" fullname="Cisco">
				<organization></organization>
  </author>
  <date month="October" year="2006"/>
  </front>

  </reference>


    <reference anchor="Zack-FW-Benchmark" target="http://www.ipv6hackers.org/meetings/ipv6-hackers-1/zack-ipv6hackers1-firewall-security-assessment-and-benchmarking.pdf">
  <front>
  <title abbrev="Firewall Benchmarking">Firewall Security Assessment and Benchmarking IPv6 Firewall Load Tests</title>
  <author initials="E." surname="Zack" fullname="Eldad Zack">
  </author>
  <date year=""/>
  </front>
		<seriesInfo name="" value="IPv6 Hackers Meeting #1, Berlin, Germany. June 30, 2013"/>
<!-- July 27 - August 1 -->
  </reference>


    <reference anchor="PMTUD-Blackholes" target="http://www.nlnetlabs.nl/downloads/publications/pmtu-black-holes-msc-thesis.pdf">
  <front>
  <title>Discovering Path MTU black holes on the Internet using RIPE Atlas</title>
  <author initials="M." surname="De Boer" fullname="Maikel De Boer">
				<organization></organization>
  </author>
  <author initials="J." surname="Bosma" fullname="Jeffrey Bosma">
				<organization></organization>
  </author>
  <date month="July" year="2012"/>
  </front>

  </reference>


</references>

  </back>
</rfc>
